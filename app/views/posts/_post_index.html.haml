
- posts.each do |post|
  .post{class: "post post_#{post.id} clearfix"}
    =link_to "/posts/#{post.id}/show_article", remote: true do
      .top
        .article_title
          = post.article_title
        .article_site= post.article_site
     
          
    .body
      .main
        .content.clearfix
          .user_block.clearfix
            =image_tag post.user.image.url, class:"pull-left"
            =link_to post.user, class: "pull-left" do
              =post.user.name
              %span.grey
                #{time_ago_in_words(post.created_at)} ago
              %p.user_shoulder_name
                =post.user.shoulder_name
          =render_with_hashtags(simple_format(post.content))
        .post_image{ style: "background-image: url(#{post.article_image.url});"}

      .status
        .like_link
          =render '/likes/like_post', post: post
        .divider
          ãƒ»
        =link_to "COMMENT", "/posts/#{post.id}", remote: true, class: "post_link" 
        -if post.comments.count > 1  
          =link_to "View all #{post.comments.count} comments", "/posts/#{post.id}", remote: true, class: "post_view_link pull-right"
        
    - best_comments = Comment.where(id: Like.where(post_id: post.id ,target_type: "comment").group(:comment_id).order('count(comment_id) desc').limit(1).pluck(:comment_id))
    - comment = best_comments[0]
    - if comment == nil
      -comment = post.comments.last
    
    - if comment != nil
      .best_comment
        .body
          .content.clearfix
            .user_block.clearfix
              =image_tag comment.user.image.url, class:"pull-left"
              =link_to comment.user, class: "pull-left" do
                =comment.user.name
                %span.grey
                  #{time_ago_in_words(post.created_at)} ago
                %p.user_shoulder_name
                  =comment.user.shoulder_name
              
            %p.give_me_ellipsis 
              =comment.content
        