

- posts.each do |post|
  .post{class: "post post_#{post.id} clearfix"}
    .body
      .main
        .content.clearfix
          .user_block.clearfix
            =image_tag post.user.image.url, class:"pull-left"
            =link_to post.user, class: "pull-left" do
              =post.user.name
              %span.grey
                #{time_ago_in_words(post.created_at)} ago
              %p.user_shoulder_name
                =post.user.shoulder_name
          =render_with_hashtags(simple_format(post.content))

      .status
        .like_link
          =render '/likes/like_post', post: post
        .comment_link
          %i.fa.fa-comment-o 
          =post.comments.count
        .divider
          ãƒ»
        .comment_invite
          COMMENT
    - best_comments = Comment.where(id: Like.where(post_id: post.id ,target_type: "comment").group(:comment_id).order('count(comment_id) desc').limit(1).pluck(:comment_id))
    - comment = best_comments[0]
    - unless comment.nil?
      .best_comment
        .comment
          .body
            .content.clearfix
              .user_block.clearfix
                =image_tag comment.user.image.url, class:"pull-left"
                =link_to comment.user, class: "pull-left" do
                  =comment.user.name
                  %span.grey
                    #{time_ago_in_words(post.created_at)} ago
                  %p.user_shoulder_name
                    =comment.user.shoulder_name
              
              %p.give_me_ellipsis 
                =comment.content