.post{class: "post post_#{post.id} clearfix"}
	.body
		.main
			.content.clearfix
				.user_block.clearfix{class: "user_#{post.user.id}"}
					=image_tag post.user.image.url, class:"pull-left img-circle user_image"
					.user_info
						=link_to post.user  do
							.give_me_short_ellipsis.light_navy.bold
								=post.user.name
						%p.user_shoulder_name.sm.grey
							=post.user.shoulder_name
					.user_option.follow_switch.pull-right
						=render "/shared/follow_form_icon.html.haml", user: post.user
				=render_with_hashtags(post.content.gsub(/\n/, '<br />'))
				%p.sm.grey
					#{time_ago_in_words(post.created_at)} ago

		.status.md
			.post_like_link
				=render '/likes/like_post', post: post
			.comment_link
				COMMENT
				ãƒ»
				.comment_count	
					-if post.comments.count >= 1  
						= post.comments.count
					-else
						0
			.option.pull-right
				%i.fa.fa-ellipsis-h.lg
	
	.comment_index		
		.comment_form.clearfix
			-comment = Comment.new
			=render 'comments/form', comment: comment, post: post
			
		- best_comments = Comment.where(id: Like.where(post_id: post.id ,target_type: "comment").group(:comment_id).order('count(comment_id) desc').limit(1).pluck(:comment_id))
		- comment = best_comments[0]
		- if comment == nil
			- comment = post.comments.last
		- if post.comments.count > 1
			.view_link
				=render 'comments/view_more_link', post: post
	
		.comments
			- unless comment == nil
				=render 'comments/comment_wo_replies', comment: comment

:javascript
	$('.comment_link').click(function(){
		$(this).parents('.post').find('.comment_form textarea').focus();
	});