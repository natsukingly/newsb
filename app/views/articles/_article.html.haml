
=link_to article_path(article.id), class: "article article_#{article.id} clearfix" do
	.article_wrapper
		.article_block
			.image{style: "background-image: url(#{article_image_helper article.image.url});"}

		
			.info
				.title
					%h2.give_me_ellipsis
						= article.title
						- if article.title.empty?
							[ This article has been deleted ]
					%p.sm.grey
						= universal_truncate_with_omission(article.source, 30, "")
						- if article.published_time
							%i.fa.fa-clock-o
							#{time_ago_in_words_short(article.published_time)}
					
				.sub_info
					.posts_count	
						-popular_users = User.where(id: article.posts.order(likes_count: :desc).limit(5).uniq.pluck(:user_id))
						.popular_user_faces.user_faces
							-popular_users.each do |user|
								=user_image_helper(user) 
						%span
							-if article.posts_count != 0
								#{article.posts_count} posts
							-report_count = article.posts.where(fake_news_report: true).count
							-if report_count != 0
								%span.fake_news_report_count
									[#{report_count} reports]
					-if article.posts_count != 0 || report_count != 0
						.best_post_btn
							Best post
						
						
		
			
		.best_post
			-post = article.posts.order(likes_count: :desc).first
			
			- if post != nil
				.body.clearfix
					.user_block
						.user_image
							=user_image_helper(post.user)
						.user_details
							%p
								%span
									=post.user.name
								%span.user_shoulder_name
									=post.user.shoulder_name
							%p.content
								-if post.content.empty?
									%span.shared_message
										> Shared this article
								-else
									= universal_truncate(post.content, 400) do
										%span ...
		
							
